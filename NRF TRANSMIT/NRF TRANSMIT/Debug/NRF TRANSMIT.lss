
NRF TRANSMIT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000324  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000398  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bb0  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f8  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060a  00000000  00000000  0000171c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00001d28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044d  00000000  00000000  00001e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003c5  00000000  00000000  00002255  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000261a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   8:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  10:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  14:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  18:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  1c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  20:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  24:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  28:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  2c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  30:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  34:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  38:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  3c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  40:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  44:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  48:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  4c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  50:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  54:	81 00       	.word	0x0081	; ????
  56:	86 00       	.word	0x0086	; ????
  58:	8b 00       	.word	0x008b	; ????
  5a:	90 00       	.word	0x0090	; ????
  5c:	95 00       	.word	0x0095	; ????
  5e:	9a 00       	.word	0x009a	; ????
  60:	9f 00       	.word	0x009f	; ????
  62:	a4 00       	.word	0x00a4	; ????
  64:	a9 00       	.word	0x00a9	; ????
  66:	ae 00       	.word	0x00ae	; ????
  68:	b3 00       	.word	0x00b3	; ????
  6a:	b8 00       	.word	0x00b8	; ????
  6c:	bd 00       	.word	0x00bd	; ????
  6e:	c2 00       	.word	0x00c2	; ????
  70:	c7 00       	.word	0x00c7	; ????
  72:	cc 00       	.word	0x00cc	; ????

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf e5       	ldi	r28, 0x5F	; 95
  7a:	d4 e0       	ldi	r29, 0x04	; 4
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_clear_bss>:
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	a0 e6       	ldi	r26, 0x60	; 96
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	01 c0       	rjmp	.+2      	; 0x8a <.do_clear_bss_start>

00000088 <.do_clear_bss_loop>:
  88:	1d 92       	st	X+, r1

0000008a <.do_clear_bss_start>:
  8a:	a1 36       	cpi	r26, 0x61	; 97
  8c:	b2 07       	cpc	r27, r18
  8e:	e1 f7       	brne	.-8      	; 0x88 <.do_clear_bss_loop>
  90:	0e 94 63 01 	call	0x2c6	; 0x2c6 <main>
  94:	0c 94 90 01 	jmp	0x320	; 0x320 <_exit>

00000098 <__bad_interrupt>:
  98:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009c <_Z3spiv>:

void flush_Rx(void)
{
	PORTB&=~(1<<PB4);
	spi_transceiver(FLUSH_RX);
	PORTB|=(1<<PB4);
  9c:	87 b3       	in	r24, 0x17	; 23
  9e:	82 6b       	ori	r24, 0xB2	; 178
  a0:	87 bb       	out	0x17, r24	; 23
  a2:	be 98       	cbi	0x17, 6	; 23
  a4:	8d b1       	in	r24, 0x0d	; 13
  a6:	81 65       	ori	r24, 0x51	; 81
  a8:	8d b9       	out	0x0d, r24	; 13
  aa:	bc 9a       	sbi	0x17, 4	; 23
  ac:	c1 98       	cbi	0x18, 1	; 24
  ae:	08 95       	ret

000000b0 <_Z15spi_transceiverh>:
  b0:	8f b9       	out	0x0f, r24	; 15
  b2:	00 00       	nop
  b4:	77 9b       	sbis	0x0e, 7	; 14
  b6:	fe cf       	rjmp	.-4      	; 0xb4 <_Z15spi_transceiverh+0x4>
  b8:	8f b1       	in	r24, 0x0f	; 15
  ba:	08 95       	ret

000000bc <_Z9read_byteh>:
  bc:	c4 98       	cbi	0x18, 4	; 24
  be:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
  c8:	c4 9a       	sbi	0x18, 4	; 24
  ca:	08 95       	ret

000000cc <_Z8writenrfhh>:
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	d6 2f       	mov	r29, r22
  d2:	c4 98       	cbi	0x18, 4	; 24
  d4:	8f 71       	andi	r24, 0x1F	; 31
  d6:	80 62       	ori	r24, 0x20	; 32
  d8:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
  dc:	c8 2f       	mov	r28, r24
  de:	8d 2f       	mov	r24, r29
  e0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
  e4:	c4 9a       	sbi	0x18, 4	; 24
  e6:	8c 2f       	mov	r24, r28
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <_Z4sendh>:
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	80 31       	cpi	r24, 0x10	; 16
  f2:	91 05       	cpc	r25, r1
  f4:	08 f0       	brcs	.+2      	; 0xf8 <_Z4sendh+0xa>
  f6:	54 c0       	rjmp	.+168    	; 0x1a0 <_Z4sendh+0xb2>
  f8:	fc 01       	movw	r30, r24
  fa:	e6 5d       	subi	r30, 0xD6	; 214
  fc:	ff 4f       	sbci	r31, 0xFF	; 255
  fe:	0c 94 8a 01 	jmp	0x314	; 0x314 <__tablejump2__>
 102:	5d 9b       	sbis	0x0b, 5	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <_Z4sendh+0x14>
 106:	80 e3       	ldi	r24, 0x30	; 48
 108:	8c b9       	out	0x0c, r24	; 12
 10a:	08 95       	ret
 10c:	5d 9b       	sbis	0x0b, 5	; 11
 10e:	fe cf       	rjmp	.-4      	; 0x10c <_Z4sendh+0x1e>
 110:	81 e3       	ldi	r24, 0x31	; 49
 112:	8c b9       	out	0x0c, r24	; 12
 114:	08 95       	ret
 116:	5d 9b       	sbis	0x0b, 5	; 11
 118:	fe cf       	rjmp	.-4      	; 0x116 <_Z4sendh+0x28>
 11a:	82 e3       	ldi	r24, 0x32	; 50
 11c:	8c b9       	out	0x0c, r24	; 12
 11e:	08 95       	ret
 120:	5d 9b       	sbis	0x0b, 5	; 11
 122:	fe cf       	rjmp	.-4      	; 0x120 <_Z4sendh+0x32>
 124:	83 e3       	ldi	r24, 0x33	; 51
 126:	8c b9       	out	0x0c, r24	; 12
 128:	08 95       	ret
 12a:	5d 9b       	sbis	0x0b, 5	; 11
 12c:	fe cf       	rjmp	.-4      	; 0x12a <_Z4sendh+0x3c>
 12e:	84 e3       	ldi	r24, 0x34	; 52
 130:	8c b9       	out	0x0c, r24	; 12
 132:	08 95       	ret
 134:	5d 9b       	sbis	0x0b, 5	; 11
 136:	fe cf       	rjmp	.-4      	; 0x134 <_Z4sendh+0x46>
 138:	85 e3       	ldi	r24, 0x35	; 53
 13a:	8c b9       	out	0x0c, r24	; 12
 13c:	08 95       	ret
 13e:	5d 9b       	sbis	0x0b, 5	; 11
 140:	fe cf       	rjmp	.-4      	; 0x13e <_Z4sendh+0x50>
 142:	86 e3       	ldi	r24, 0x36	; 54
 144:	8c b9       	out	0x0c, r24	; 12
 146:	08 95       	ret
 148:	5d 9b       	sbis	0x0b, 5	; 11
 14a:	fe cf       	rjmp	.-4      	; 0x148 <_Z4sendh+0x5a>
 14c:	87 e3       	ldi	r24, 0x37	; 55
 14e:	8c b9       	out	0x0c, r24	; 12
 150:	08 95       	ret
 152:	5d 9b       	sbis	0x0b, 5	; 11
 154:	fe cf       	rjmp	.-4      	; 0x152 <_Z4sendh+0x64>
 156:	88 e3       	ldi	r24, 0x38	; 56
 158:	8c b9       	out	0x0c, r24	; 12
 15a:	08 95       	ret
 15c:	5d 9b       	sbis	0x0b, 5	; 11
 15e:	fe cf       	rjmp	.-4      	; 0x15c <_Z4sendh+0x6e>
 160:	89 e3       	ldi	r24, 0x39	; 57
 162:	8c b9       	out	0x0c, r24	; 12
 164:	08 95       	ret
 166:	5d 9b       	sbis	0x0b, 5	; 11
 168:	fe cf       	rjmp	.-4      	; 0x166 <_Z4sendh+0x78>
 16a:	81 e4       	ldi	r24, 0x41	; 65
 16c:	8c b9       	out	0x0c, r24	; 12
 16e:	08 95       	ret
 170:	5d 9b       	sbis	0x0b, 5	; 11
 172:	fe cf       	rjmp	.-4      	; 0x170 <_Z4sendh+0x82>
 174:	82 e4       	ldi	r24, 0x42	; 66
 176:	8c b9       	out	0x0c, r24	; 12
 178:	08 95       	ret
 17a:	5d 9b       	sbis	0x0b, 5	; 11
 17c:	fe cf       	rjmp	.-4      	; 0x17a <_Z4sendh+0x8c>
 17e:	83 e4       	ldi	r24, 0x43	; 67
 180:	8c b9       	out	0x0c, r24	; 12
 182:	08 95       	ret
 184:	5d 9b       	sbis	0x0b, 5	; 11
 186:	fe cf       	rjmp	.-4      	; 0x184 <_Z4sendh+0x96>
 188:	84 e4       	ldi	r24, 0x44	; 68
 18a:	8c b9       	out	0x0c, r24	; 12
 18c:	08 95       	ret
 18e:	5d 9b       	sbis	0x0b, 5	; 11
 190:	fe cf       	rjmp	.-4      	; 0x18e <_Z4sendh+0xa0>
 192:	85 e4       	ldi	r24, 0x45	; 69
 194:	8c b9       	out	0x0c, r24	; 12
 196:	08 95       	ret
 198:	5d 9b       	sbis	0x0b, 5	; 11
 19a:	fe cf       	rjmp	.-4      	; 0x198 <_Z4sendh+0xaa>
 19c:	86 e4       	ldi	r24, 0x46	; 70
 19e:	8c b9       	out	0x0c, r24	; 12
 1a0:	08 95       	ret

000001a2 <_Z3stchc>:
 1a2:	cf 93       	push	r28
 1a4:	c8 2f       	mov	r28, r24
 1a6:	5d 9b       	sbis	0x0b, 5	; 11
 1a8:	fe cf       	rjmp	.-4      	; 0x1a6 <_Z3stchc+0x4>
 1aa:	6c b9       	out	0x0c, r22	; 12
 1ac:	5d 9b       	sbis	0x0b, 5	; 11
 1ae:	fe cf       	rjmp	.-4      	; 0x1ac <_Z3stchc+0xa>
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	8c b9       	out	0x0c, r24	; 12
 1b4:	8c 2f       	mov	r24, r28
 1b6:	82 95       	swap	r24
 1b8:	8f 70       	andi	r24, 0x0F	; 15
 1ba:	0e 94 77 00 	call	0xee	; 0xee <_Z4sendh>
 1be:	8c 2f       	mov	r24, r28
 1c0:	8f 70       	andi	r24, 0x0F	; 15
 1c2:	0e 94 77 00 	call	0xee	; 0xee <_Z4sendh>
 1c6:	5d 9b       	sbis	0x0b, 5	; 11
 1c8:	fe cf       	rjmp	.-4      	; 0x1c6 <_Z3stchc+0x24>
 1ca:	8a e0       	ldi	r24, 0x0A	; 10
 1cc:	8c b9       	out	0x0c, r24	; 12
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <_Z8flush_txv>:
 1d2:	c4 98       	cbi	0x18, 4	; 24
 1d4:	81 ee       	ldi	r24, 0xE1	; 225
 1d6:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
 1da:	c4 9a       	sbi	0x18, 4	; 24
 1dc:	08 95       	ret

000001de <_Z12nrf24l01_intv>:



void nrf24l01_int(void)
{
	writenrf(EN_AA,0x00);
 1de:	60 e0       	ldi	r22, 0x00	; 0
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(EN_RXADDR,0x01);
 1e6:	61 e0       	ldi	r22, 0x01	; 1
 1e8:	82 e0       	ldi	r24, 0x02	; 2
 1ea:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(SETUP_AW,0x03);
 1ee:	63 e0       	ldi	r22, 0x03	; 3
 1f0:	83 e0       	ldi	r24, 0x03	; 3
 1f2:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(RF_CH,0x09);
 1f6:	69 e0       	ldi	r22, 0x09	; 9
 1f8:	85 e0       	ldi	r24, 0x05	; 5
 1fa:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(RF_SETUP,0x26); 
 1fe:	66 e2       	ldi	r22, 0x26	; 38
 200:	86 e0       	ldi	r24, 0x06	; 6
 202:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(FEATURE ,0x01);
 206:	61 e0       	ldi	r22, 0x01	; 1
 208:	8d e1       	ldi	r24, 0x1D	; 29
 20a:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	
	PORTB&=~(1<<PB4);
 20e:	c4 98       	cbi	0x18, 4	; 24
	spi_transceiver(W_REGISTER+RX_ADDR_P0);
 210:	8a e2       	ldi	r24, 0x2A	; 42
 212:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0X01);
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);	
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
    spi_transceiver(0x01);
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	PORTB|=(1<<PB4);
 234:	c4 9a       	sbi	0x18, 4	; 24
	
	
	PORTB&=~(1<<PB4);
 236:	c4 98       	cbi	0x18, 4	; 24
	spi_transceiver(W_REGISTER+TX_ADDR);
 238:	80 e3       	ldi	r24, 0x30	; 48
 23a:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(0x01);
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	PORTB|=(1<<PB4);
 25c:	c4 9a       	sbi	0x18, 4	; 24
	
	writenrf(RX_PW_P0,0x01);
 25e:	61 e0       	ldi	r22, 0x01	; 1
 260:	81 e1       	ldi	r24, 0x11	; 17
 262:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(CONFIG,0x7E);
 266:	6e e7       	ldi	r22, 0x7E	; 126
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(SETUP_RETR,0x00);
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	84 e0       	ldi	r24, 0x04	; 4
 272:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
	writenrf(STATUS,0x7E)	;
 276:	6e e7       	ldi	r22, 0x7E	; 126
 278:	87 e0       	ldi	r24, 0x07	; 7
 27a:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8writenrfhh>
 27e:	08 95       	ret

00000280 <_Z8transmith>:
   	
}


void transmit(uint8_t data)
{   
 280:	cf 93       	push	r28
 282:	c8 2f       	mov	r28, r24
	status=read_byte(STATUS);
 284:	87 e0       	ldi	r24, 0x07	; 7
 286:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z9read_byteh>
 28a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
	stc(status,'a') ;
 28e:	61 e6       	ldi	r22, 0x61	; 97
 290:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_Z3stchc>
	PORTB |=(1<<PB1);
 294:	c1 9a       	sbi	0x18, 1	; 24
    flush_tx();
 296:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <_Z8flush_txv>
    
	PORTB&=~(1<<PB4);
 29a:	c4 98       	cbi	0x18, 4	; 24
	spi_transceiver(W_TX_PAYLOAD);
 29c:	80 ea       	ldi	r24, 0xA0	; 160
 29e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	spi_transceiver(data);
 2a2:	8c 2f       	mov	r24, r28
 2a4:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z15spi_transceiverh>
	PORTB|=(1<<PB4);
 2a8:	c4 9a       	sbi	0x18, 4	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2aa:	82 e4       	ldi	r24, 0x42	; 66
 2ac:	8a 95       	dec	r24
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <_Z8transmith+0x2c>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <_Z8transmith+0x32>
	_delay_us(200);
	status=read_byte(STATUS);
 2b2:	87 e0       	ldi	r24, 0x07	; 7
 2b4:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z9read_byteh>
 2b8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
	stc(status,'b') ;
 2bc:	62 e6       	ldi	r22, 0x62	; 98
 2be:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_Z3stchc>
	//_delay_us(20);
	//PORTB &= ~(1<<PINB1);
//	_delay_us(20);
//	PORTB |=(1<<PINB1);
	
}
 2c2:	cf 91       	pop	r28
 2c4:	08 95       	ret

000002c6 <main>:
	reset();
    PORTD&=~(1<<PD6);
}*/

int main(void)
{   UCSRC &=~(1<<URSEL);
 2c6:	80 b5       	in	r24, 0x20	; 32
 2c8:	8f 77       	andi	r24, 0x7F	; 127
 2ca:	80 bd       	out	0x20, r24	; 32
	unsigned int  h = 51;
	UBRRH=(unsigned char)(h>>8);
 2cc:	10 bc       	out	0x20, r1	; 32
	UBRRL=(unsigned char)h;
 2ce:	83 e3       	ldi	r24, 0x33	; 51
 2d0:	89 b9       	out	0x09, r24	; 9
	
	UCSRC |=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
 2d2:	80 b5       	in	r24, 0x20	; 32
 2d4:	86 68       	ori	r24, 0x86	; 134
 2d6:	80 bd       	out	0x20, r24	; 32
	UCSRB &=~(1<<UCSZ2);
 2d8:	52 98       	cbi	0x0a, 2	; 10
	UCSRC &=~(1<<UMSEL)& ~(1<<UPM1)& ~(1<<UPM0)&~(1<<USBS);
 2da:	80 b5       	in	r24, 0x20	; 32
 2dc:	87 78       	andi	r24, 0x87	; 135
 2de:	80 bd       	out	0x20, r24	; 32
	UCSRB |=(1<<TXEN);
 2e0:	53 9a       	sbi	0x0a, 3	; 10
	
	spi();
 2e2:	0e 94 4e 00 	call	0x9c	; 0x9c <_Z3spiv>
	
	DDRD|=(1<<PD7);
 2e6:	8f 9a       	sbi	0x11, 7	; 17
   	
	
    while (1) 
  {
	  nrf24l01_int();
 2e8:	0e 94 ef 00 	call	0x1de	; 0x1de <_Z12nrf24l01_intv>
	  transmit('G');
 2ec:	87 e4       	ldi	r24, 0x47	; 71
 2ee:	0e 94 40 01 	call	0x280	; 0x280 <_Z8transmith>
	  status=read_byte(FIFO_STATUS);
 2f2:	87 e1       	ldi	r24, 0x17	; 23
 2f4:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z9read_byteh>
 2f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
	  stc(status,'C') ;
 2fc:	63 e4       	ldi	r22, 0x43	; 67
 2fe:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_Z3stchc>
	  status=read_byte(STATUS);
 302:	87 e0       	ldi	r24, 0x07	; 7
 304:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z9read_byteh>
 308:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
	  stc(status,'d') ;
 30c:	64 e6       	ldi	r22, 0x64	; 100
 30e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_Z3stchc>
 312:	ea cf       	rjmp	.-44     	; 0x2e8 <main+0x22>

00000314 <__tablejump2__>:
 314:	ee 0f       	add	r30, r30
 316:	ff 1f       	adc	r31, r31
 318:	05 90       	lpm	r0, Z+
 31a:	f4 91       	lpm	r31, Z
 31c:	e0 2d       	mov	r30, r0
 31e:	09 94       	ijmp

00000320 <_exit>:
 320:	f8 94       	cli

00000322 <__stop_program>:
 322:	ff cf       	rjmp	.-2      	; 0x322 <__stop_program>
